/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JFrame;
import static Helper.Helper_movimiento.movilizar;

import Construccion.CargarError;
import Construccion.CargarToken;
import Construccion.CargarLexema;
import Tablas.Lexema_table;
import Tablas.tokens_Table;
import Model.Errores;
import Reportes_Objetos.ReporteTokensObjeto;
import Model.Lexemas_model;
import Automata_Analisis.Id;
import Archive.CargaArchivo;
import Archive.Contador_Lineas;
import Archive.EscritorArchivo;
import Automata_Analisis.Signo_Agrupacion;
import Automata_Analisis.Numero_o_Decimal;
import Automata_Analisis.Operador_Aritmetico;
import Automata_Analisis.Signo_Puntuacion;
import Controller.CodigoCondicionalRepetidoAutomata;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static Helper.Datos_manejadores.instanciadores;
import Tablas.Error_Table;
import Validacion.validaciones;



/**
 *
 * @author alexis
 */
public class frame_principal extends javax.swing.JFrame {

  
   
 private JFileChooser seleccion = new JFileChooser();
      private EscritorArchivo guardararchivos;
         private File archivo;
  
         
          private String archivoALeer;
    private String nombreArchivoALeer;
         
    public static CargarError cargaE;
    public static CargarError cargarError;
    public static CargarLexema cargarLexema;
    public static CargarToken cargarToken;
    
    
    // Arraylists
    public static ArrayList<Errores> ErrorLista;
    public static ArrayList<Lexemas_model> lexemaLista;
    public static ArrayList<ReporteTokensObjeto> Tokenlista;


    public frame_principal() {
        initComponents();//iniciar componentes
        crearReportes();//llamado metodo crear reportes
        this.setLocationRelativeTo(null);//Centramos nuestro frame
    }
    //Creamos metodo para crear cargas
    public void crearReportes(){
        this.cargarError = new CargarError();  
        this.cargarLexema = new CargarLexema();

        this.cargarToken = new CargarToken();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        cargabtn = new javax.swing.JButton();
        analyzerbtn = new javax.swing.JButton();
        guardarbtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        TokenTabla = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        lexematabla = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        errorTabla = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inicio");

        jLabel2.setFont(new java.awt.Font("Engravers MT", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Reportes de tokens");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        cargabtn.setFont(new java.awt.Font("Engravers MT", 0, 12)); // NOI18N
        cargabtn.setForeground(new java.awt.Color(0, 0, 0));
        cargabtn.setText("Cargar Archivo");
        cargabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargabtnActionPerformed(evt);
            }
        });

        analyzerbtn.setFont(new java.awt.Font("Engravers MT", 0, 12)); // NOI18N
        analyzerbtn.setForeground(new java.awt.Color(0, 0, 0));
        analyzerbtn.setText("ANALIZAR TEXTO");
        analyzerbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyzerbtnActionPerformed(evt);
            }
        });

        guardarbtn.setFont(new java.awt.Font("Engravers MT", 0, 12)); // NOI18N
        guardarbtn.setForeground(new java.awt.Color(0, 0, 0));
        guardarbtn.setText("Guardar Archivo");
        guardarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarbtnActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        TokenTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "token", "Lexema", "Fila", "Columna"
            }
        ));
        jScrollPane3.setViewportView(TokenTabla);

        lexematabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Lexema", "Token", "veces"
            }
        ));
        jScrollPane4.setViewportView(lexematabla);

        errorTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Error", "Fila", "Columna"
            }
        ));
        jScrollPane6.setViewportView(errorTabla);

        jLabel5.setFont(new java.awt.Font("Engravers MT", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("ingreso texto");

        jLabel7.setFont(new java.awt.Font("Engravers MT", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Reporte de errores");

        jLabel8.setFont(new java.awt.Font("Engravers MT", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Recuento de lexemas");

        jLabel9.setFont(new java.awt.Font("Engravers MT", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Visualizacion");

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane5.setViewportView(jTextArea3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cargabtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(guardarbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(analyzerbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel8))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(59, 59, 59)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(94, 94, 94))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cargabtn)
                                .addGap(28, 28, 28)
                                .addComponent(guardarbtn)
                                .addGap(31, 31, 31)
                                .addComponent(analyzerbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(335, 335, 335))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(269, 269, 269))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(210, 210, 210))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarbtnActionPerformed
         javax.swing.JFileChooser archivo = new javax.swing.JFileChooser();
                archivo.setDialogTitle("Especifica el archivo para guardar");   
                int seleccion = archivo.showSaveDialog(this);
                 
                if (seleccion == javax.swing.JFileChooser.APPROVE_OPTION) {
                        try {
                                EscritorArchivo.guardar(jTextArea1, archivo.getSelectedFile());
                        } catch (IOException e) {
                                e.printStackTrace();
                        }
                }
   
    }//GEN-LAST:event_guardarbtnActionPerformed

    private void analyzerbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyzerbtnActionPerformed
        inicializadorValores();//método inicializador de valores
        //creamos variables
        String linea,reduccionLinea;
        String texto=jTextArea1.getText();
        int contador=0;
        int verificadorEspacio=0,eliminadorWhile=1;
        char verificadorLinea;
        //convertimos el texto para lectura
        Reader leer = new StringReader(texto);
        BufferedReader leerTA = new BufferedReader(leer);
        try {
            //mientras existe linea leerá
            while ((linea = leerTA.readLine()) != null) {
                //reseteamos componentes de datos
                contador++;
                verificadorEspacio=0;
                eliminadorWhile=1;
                movilizar.setFila(contador);
                movilizar.setColumna(0);
                movilizar.setCaracteresUsados(0);
                movilizar.setCadenaUsada("");
                verificadorLinea=linea.charAt(0);//obtenemos valor valor posicion 0 de linea
                String comprobarPunto=Character.toString(verificadorLinea);//pasamos char a string
                //si es letra ingresa a automata identificador
                
                if (validaciones.esLetra(verificadorLinea)) {
                       Id.inicio_ID(linea,jTextArea2);
                    reduccionLinea=linea.substring(movilizar.getCaracteresUsados(), linea.length());
                    pasadorDatos(linea,reduccionLinea,verificadorLinea);//sirve para enviar datos a instanciador de repitencia
                    while(movilizar.getCaracteresUsados()<linea.length()){//repetimos instancia de automatas
                        CodigoCondicionalRepetidoAutomata.codigoAutomataRepitencia(instanciadores.getLinea(), instanciadores.getVerificadorLinea(), instanciadores.getReduccionLinea(), movilizar.getCaracteresUsados(), jTextArea2);
                    }
                } 
             
                else if(validaciones.esNumero(verificadorLinea)){
                    Numero_o_Decimal.empezar_numero_lexema(linea,jTextArea2);
                    reduccionLinea=linea.substring(movilizar.getCaracteresUsados(), linea.length());
                    pasadorDatos(linea,reduccionLinea,verificadorLinea);//sirve para enviar datos a instanciador de repitencia
                    while(movilizar.getCaracteresUsados()<linea.length()){//repetimos instancia de automatas
                        CodigoCondicionalRepetidoAutomata.codigoAutomataRepitencia(instanciadores.getLinea(), instanciadores.getVerificadorLinea(), instanciadores.getReduccionLinea(), movilizar.getCaracteresUsados(), jTextArea2);
                    }
                }//Si es +-*/ entre signos parecidos significa que entra a operacion
                else if (validaciones.esAritmetico(verificadorLinea))  {
                    Operador_Aritmetico.operadorInicio(linea,jTextArea2);
                    reduccionLinea=linea.substring(movilizar.getCaracteresUsados(), linea.length());
                    pasadorDatos(linea,reduccionLinea,verificadorLinea);//sirve para enviar datos a instanciador de repitencia
                    while(movilizar.getCaracteresUsados()<linea.length()){//repetimos instancia de automatas
                        CodigoCondicionalRepetidoAutomata.codigoAutomataRepitencia(instanciadores.getLinea(), instanciadores.getVerificadorLinea(), instanciadores.getReduccionLinea(), movilizar.getCaracteresUsados(), jTextArea2);
                    }
                }//si es . , ; entre signos parecidos significa que entra a puntuacion
                else if(validaciones.esAgrupacion(verificadorLinea)){
                       Signo_Agrupacion.agrupacionInicio(linea,jTextArea2);
                        reduccionLinea=linea.substring(movilizar.getCaracteresUsados(), linea.length());
                        pasadorDatos(linea,reduccionLinea,verificadorLinea);//sirve para enviar datos a instanciador de repitencia
                        while(movilizar.getCaracteresUsados()<linea.length()){//repetimos instancia de automatas
                            CodigoCondicionalRepetidoAutomata.codigoAutomataRepitencia(instanciadores.getLinea(), instanciadores.getVerificadorLinea(), instanciadores.getReduccionLinea(), movilizar.getCaracteresUsados(), jTextArea2);
                        }
                }  else if(validaciones.esPuntuacion(verificadorLinea)){

                        Signo_Puntuacion.puntuacionInicio(linea,jTextArea2);
                    reduccionLinea=linea.substring(movilizar.getCaracteresUsados(), linea.length());
                    pasadorDatos(linea,reduccionLinea,verificadorLinea);//sirve para enviar datos a instanciador de repitencia
                    while(movilizar.getCaracteresUsados()<linea.length()){//repetimos instancia de automatas
                        CodigoCondicionalRepetidoAutomata.codigoAutomataRepitencia(instanciadores.getLinea(), instanciadores.getVerificadorLinea(), instanciadores.getReduccionLinea(), movilizar.getCaracteresUsados(), jTextArea2);
                    }
                    }else{
                        try {
                            //cargamos reporte de error
                            movilizar.setCadenaUsada(Character.toString(verificadorLinea));
                            movilizar.setCaracteresUsados(1);
                            cargarError.cargarReporte();
                            movilizar.setCondiconalError(1);
                            reduccionLinea=linea.substring(movilizar.getCaracteresUsados(), linea.length());
                            pasadorDatos(linea,reduccionLinea,verificadorLinea);//sirve para enviar datos a instanciador de repitencia
                            //señalizaos error
                            jTextArea2.setText(jTextArea2.getText()+"error con el lexema "+movilizar.getCadenaUsada()+"\n");
                            while(movilizar.getCaracteresUsados()<linea.length()){//repetimos instancia de automatas
                                CodigoCondicionalRepetidoAutomata.codigoAutomataRepitencia(instanciadores.getLinea(), instanciadores.getVerificadorLinea(), instanciadores.getReduccionLinea(), movilizar.getCaracteresUsados(), jTextArea2);
                            }
                        } catch (FileNotFoundException ex) {
                            Logger.getLogger(frame_principal.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (ClassNotFoundException ex) {
                            Logger.getLogger(frame_principal.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
                if(movilizar.getCondiconalError()==1){
                    //si hay error solo carga esta tabla
                    Error_Table.Error_Table(ErrorLista, errorTabla);
                }else if(movilizar.getCondiconalError()==0){
                    //si no hay errores cargamos las tablas correctas
                    Lexema_table.lexema_table(lexemaLista, lexematabla);
                    tokens_Table.Token_Table(Tokenlista, TokenTabla);
                }
            } catch (IOException ex) {
                Logger.getLogger(frame_principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        Contador_Lineas lineas = new Contador_Lineas();
        lineas.Contar(jTextArea1, jTextArea3);

    }//GEN-LAST:event_analyzerbtnActionPerformed

    private void cargabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargabtnActionPerformed
   //filechooser para abrir o guardar archivos
        JFileChooser archivoEleccion = new JFileChooser();
        int eleccion = archivoEleccion.showOpenDialog(this);//variable para seleccionar
        //aprove option es si el usuario le da en aceptar
        if (eleccion == JFileChooser.APPROVE_OPTION) {
            File archivo = archivoEleccion.getSelectedFile();//seleccionamos file para fileReader, agarramos el seleccionado
            try {
                //llamos la clase carga archivo e ingresamos parametros
                CargaArchivo carga = new CargaArchivo();
                carga.leer(archivo, jTextArea1, jTextArea3);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error al leer carga de archivo");
                ex.printStackTrace();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(frame_principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cargabtnActionPerformed
    private void inicializadorValores(){
      
        ErrorLista = new ArrayList<>();  
        lexemaLista = new ArrayList<>();   
        Tokenlista = new ArrayList<>(); 
        //llamamos a que se complete la tabla 
        Error_Table.Error_Table(ErrorLista, errorTabla);
        Lexema_table.lexema_table(lexemaLista, lexematabla);
        tokens_Table.Token_Table(Tokenlista, TokenTabla);
        //reiniciamos valores
        movilizar.setCondiconalError(0);
        jTextArea2.setText("");
        movilizar.setCaracteresUsados(0);
        movilizar.setCadenaUsada("");
        movilizar.setFila(0);
        movilizar.setColumna(0);
    }
    public void pasadorDatos(String linea, String reduccionLinea, char verificadorLinea){
        //llamamos a instanciadores para que se modifiquen según sea el caso solo pasando parametros
        instanciadores.setLinea(linea);
        instanciadores.setReduccionLinea(reduccionLinea);
        instanciadores.setVerificadorLinea(verificadorLinea);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTable TokenTabla;
    private javax.swing.JButton analyzerbtn;
    private javax.swing.JButton cargabtn;
    public static javax.swing.JTable errorTabla;
    private javax.swing.JButton guardarbtn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    public static javax.swing.JTextArea jTextArea1;
    public static javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    public static javax.swing.JTable lexematabla;
    // End of variables declaration//GEN-END:variables
}
